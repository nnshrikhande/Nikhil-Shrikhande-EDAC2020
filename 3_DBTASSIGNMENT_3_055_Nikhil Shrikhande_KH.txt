CREATE DATABASE DBTASSIGNMENT3;
USE DBTASSIGNMENT3;

create table Department(dept_id integer NOT NULL, dept_name varchar(50) NOT NULL, PRIMARY KEY(dept_id));
desc Department;
insert into department values(1,'Finance');
insert into department values(2,'Training');
insert into department values(3,'Marketing');
select * from Department;

create table Employee(empid int NOT NULL, emp_name varchar(50) NOT NULL,
 dept_id int NOT NULL, salary double, manager  char(50),
 CONSTRAINT Employee_fk FOREIGN KEY(dept_id) REFERENCES Department(dept_id)
 );
 desc Employee;
insert into employee values(1,'Arun',1,8000, 4);
insert into employee values(2,'Kiran',1,7000,1);
insert into employee values(3,'Scott',1,3000,1);
insert into employee values(4,'Max',2,9000,null);
insert into employee values(5,'Jack',2,8000,4);
insert into employee values(6,'King',3,6000,1);

create table authors
(
	auid int(5) primary key,
    aname varchar(30),
    email varchar(50),
    phone varchar(30),
	unique (email)
);
DESC authors;
insert into authors values (101,'herbert schild','herbert@yahoo.com',null);
insert into authors values (102,'james goodwill','goodwill@hotmail.com',null);
insert into authors values (103,'david hunter','huter@hotmail.com',null);
insert into authors values (104,'stephen walther','walther@gmail.com',null);
insert into authors values (105,'kevin loney','loney@oracle.com',null);
insert into authors values (106,'ed. romans','romans@theserverside.com',null);
select * from authors;

create table publishers
(
	pubid int(3) primary key,
    pname varchar(30),
    email varchar(50),
    phone varchar(30),
    unique (email)
);

insert into publishers values (1,'willey','info@wrox.com','7745001618');
insert into publishers values (2,'wrox','info@vsnl.com',null);
insert into publishers values (3,'tata mcgraw','feedback@tatamcgrawhill.com',8899764533);
insert into publishers values (4,'techmedia','books@techmedia.com',7768984563);
select * from publishers;

/* *******************(ORDER BY)**************** */
-- 1. select all from authors sort ascending by author name.
select * from authors 
ORDER BY aname ASC;

-- 2. select all from publishers sort descending by publisher name.
select * from publishers
ORDER BY pname DESC;

 /* ******************(GROUP BY)**************** */
 -- 1. select all data and sum of salary from employee and group according to deptid. 
 Select * , SUM(salary) AS 'Employee Salary'
 from Employee 
 GROUP BY dept_id;
 
 -- 2. select deptid and sum of salary where salary is greater than 3000 and group by deptid. 
select dept_id, SUM(salary) as "Employee Salary"
from employee
where salary > 3000
group by dept_id;

/* ********************(HAVING BY)***************** */
-- 1. select deptid and sum of salary where sum of salary is greater than 6000 and grup by deptid. 
select dept_id,sum(salary) as "Employee Salary"
from employee
group by dept_id
having sum(salary)>6000;

-- 2. select deptid and sum of salary where sum of salary is less than 20000 and grup by deptid.
select dept_id,sum(salary) as "Employee Salary"
from employee
group by dept_id
having sum(salary)<20000;




 
 
 
